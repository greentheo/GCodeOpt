{
    "contents" : "library(dplyr)\nlibrary(TSP)\nlibrary(ggplot2)\nlibrary(GCodeROpt)\nfile = '~/BTSync/TheoPersonal/CNC/dustBoot/dustboot_sheet2.nc'\nfile = '~/BTSync/TheoPersonal/CNC/rbpiBox//Box_2x4x8.nc'\nfile = '~/BTSync/TheoPersonal/CNC/laserMount/ElCheapo Laser Mount Laser.nc'\n#file = '~/BTSync/TheoPersonal/CNC/MaliaAndAri/MaliaAndAri.nc'\nfile = '~/BTSync/TheoPersonal/CNC/fractalTree//fractalTree.nc'\nfile = '~/BTSync/TheoPersonal/CNC/fractalTree//fractalTreeFiled.nc'\nfile = '~/BTSync/TheoPersonal/CNC/fractalTree//Fractal Tree for Arthur.nc'\nfile= '~/BTSync/TheoPersonal/CNC/fractalTree/inscription.nc'\n\n\nfileIn = readLines(file)\n\n### router settings\nlaser=F\noldFeedRate = \"5.0\"\nnewFeedRate = \"12.0\"\n###\n\n### laser Settings - 1/8inch mdf\nlaser=T\ncutReps = 11\nlayers = 6\ncutDepth = .125\n\noldFeedRate = \"5.0\"\nnewFeedRate = \"5.0\"\n### - laser\n\n### laser Settings - paper (or engrave)\nlaser=T\ncutReps = 1\nlayers = 1\ncutDepth = .125\n\noldFeedRate = \"5.0\"\nnewFeedRate = \"12.0\"\n### - laser\n\n\n  \n#divide the file into G0 initiated paths (where the drill moves to and then starts)\ng0 = grep(\"G0 \", fileIn)\n\ndiffg0 = diff(g0)\n\nmove = rep(\"start\", g0[1]-1)\nfor(i in 1:length(g0)-1){\n  move = c(move, rep(g0[i], diffg0[i]))\n}\nmove = c(move, \"end\")\nfileData = data.frame(g0=fileIn, class=move)\n\nfileData = fileData %>%\n  group_by(class) %>%\n  mutate(order=1:length(class))\n\n\n#this is where we can easily create reverse paths\n\noptPaths = data.frame(g0=fileIn[g0[1:(length(g0)-1)]], class=g0[1:(length(g0)-1)])\noptPaths$x = as.numeric(gsub('[ ][Y][0-9].*$', '', gsub('^G0 X','',optPaths$g0)))\noptPaths$y = as.numeric(gsub('^G0 X.*[ ]Y', '', optPaths$g0))\noptPaths$z = as.numeric(gsub(\" F.*$\", '',\n                             gsub(\"G1 Z\", \"\", fileIn[g0[1:(length(g0)-1)]+1])))\n  \nfileData$x = as.numeric(gsub('*.Z.*', 'NA', \n                             gsub('[ ][Y][0-9].*$', '', \n                                  gsub('^G[0-9] X','',fileData$g0))))\nfileData$y = as.numeric(gsub('*.Z.*', 'NA', \n                             gsub('^G[0-9] X.*[ ]Y', '', \n                              gsub('F.*$', '',fileData$g0))))\n\n\ndistOpt = dist(optPaths[,c(\"x\",\"y\",\"z\")])\n\ntsp = TSP(distOpt)\n\noptPathsOrd = data.frame(optPaths[ as.integer(solve_TSP(tsp,\"2-opt\")), ], sort=1:nrow(optPaths))\noptPathsOrdBase = optPathsOrd\n#if it's a laser cut, and cutReps >1 then repeat each pathSection cutReps number of times \n#(and change everyother class to a Rev class so that it just goes in opposite order) (so that it will cut out of the sheet)\nif(laser & cutReps>1){\n for(i in 2:cutReps){\n   bindDF = optPathsOrdBase\n   if(i%%2==0){\n     bindDF$class = paste0(bindDF$class, \"Rev\")\n   }\n     bindDF$sort = bindDF$sort+(i-1)/cutReps\n     optPathsOrd = rbind(optPathsOrd, bindDF)\n   \n   #now just need to get a filePaths with reverse paths and classes\n }\n}\n\n\nfileData = rbind(fileData, fileData %>% group_by(class) %>% mutate(order=rev(order)) %>% group_by() %>%\n                                                                   mutate(class=paste0(class, \"Rev\")))\n\noptMerge = merge(optPathsOrd, fileData, by=\"class\")\noptMerge = optMerge[with(optMerge, order(-z,sort, class,order)), ]\n\nggplot(na.omit(optMerge), aes(x=x.y, y=as.numeric(y.y), color=factor(sort)))+geom_path()\n#plot(optPaths$x, optPaths$y,type=\"line\")\n#plot(optPathsOrd$x, optPathsOrd$y,type = \"line\")\n#with(na.omit(fileData), plot(x, y, type=\"line\"))\n# with(na.omit(optMerge), plot(x.y, y.y, type=\"line\"))\n\n\n#now just reassemble the gcode and put it in the right order\n\ngCode = with(optMerge, data.frame(g0=g0.y, class=class))\ngCode = rbind(data.frame(g0=subset(fileData, class==\"start\")$g0, class=\"start\"), gCode)\ngCode= rbind(gCode, data.frame(g0=fileData$g0[nrow(fileData)], class=\"end\"))\n\n#change out the feedrates\ngCode$g0=gsub(paste('F', oldFeedRate, sep=''), paste('F',newFeedRate, sep=''), gCode$g0)\n\n#if laser then remove any of the up and down g1Z movements\nif(laser){\n    g0Code = (gCode$g0[-grep(\"G1 Z\", gCode$g0)])\n    if(layers>1){\n      for(i in 2:layers){\n        g0Code = c(g0Code, paste0(\"G1 Z\", -(i-1)/layers*cutDepth,\" F9.0\"))\n        g0Code = c(g0Code, gCode$g0[-grep(\"G1 Z\", gCode$g0)]) \n      }\n      g0Code = c(g0Code, paste0(\"G1 Z0.0 F9.0\"))\n    }\n    \n   writeLines(as.character(g0Code), paste(file, \".opt.nc\", sep=''))\n   print(timeToComplete(g0Code)/c(60,12))\n   \n   \n}else{\n  writeLines(as.character(gCode$g0), paste(file, \".opt.nc\", sep=''))  \n}\n\n",
    "created" : 1427331802743.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1659682773",
    "id" : "D3286881",
    "lastKnownWriteTime" : 1427988769,
    "path" : "~/githubrepo/GCodeROpt/inst/globals.r",
    "project_path" : "inst/globals.r",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}